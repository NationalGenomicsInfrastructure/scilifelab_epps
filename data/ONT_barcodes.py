DESC = """This file contains ONT barcode data as defined in LIMS,
and a dict to map a given reagent label to it's properties.
"""

kits_and_labels = [
    (
        [
            "SQK-NBD114.24",
            "SQK-NBD114.96",
        ],
        [
            "01_A1_NB01 (CACAAAGACACCGACAACTTTCTT)",
            "02_B1_NB02 (ACAGACGACTACAAACGGAATCGA)",
            "03_C1_NB03 (CCTGGTAACTGGGACACAAGACTC)",
            "04_D1_NB04 (TAGGGAAACACGATAGAATCCGAA)",
            "05_E1_NB05 (AAGGTTACACAAACCCTGGACAAG)",
            "06_F1_NB06 (GACTACTTTCTGCCTTTGCGAGAA)",
            "07_G1_NB07 (AAGGATTCATTCCCACGGTAACAC)",
            "08_H1_NB08 (ACGTAACTTGGTTTGTTCCCTGAA)",
            "09_A2_NB09 (AACCAAGACTCGCTGTGCCTAGTT)",
            "10_B2_NB10 (GAGAGGACAAAGGTTTCAACGCTT)",
            "11_C2_NB11 (TCCATTCCCTCCGATAGATGAAAC)",
            "12_D2_NB12 (TCCGATTCTGCTTCTTTCTACCTG)",
            "13_E2_NB13 (AGAACGACTTCCATACTCGTGTGA)",
            "14_F2_NB14 (AACGAGTCTCTTGGGACCCATAGA)",
            "15_G2_NB15 (AGGTCTACCTCGCTAACACCACTG)",
            "16_H2_NB16 (CGTCAACTGACAGTGGTTCGTACT)",
            "17_A3_NB17 (ACCCTCCAGGAAAGTACCTCTGAT)",
            "18_B3_NB18 (CCAAACCCAACAACCTAGATAGGC)",
            "19_C3_NB19 (GTTCCTCGTGCAGTGTCAAGAGAT)",
            "20_D3_NB20 (TTGCGTCCTGTTACGAGAACTCAT)",
            "21_E3_NB21 (GAGCCTCTCATTGTCCGTTCTCTA)",
            "22_F3_NB22 (ACCACTGCCATGTATCAAAGTACG)",
            "23_G3_NB23 (CTTACTACCCAGTGAACCTCCTCG)",
            "24_H3_NB24 (GCATAGTTCTGCATGATGGGTTAG)",
            "25_A4_NB25 (GTAAGTTGGGTATGCAACGCAATG)",
            "26_B4_NB26 (CATACAGCGACTACGCATTCTCAT)",
            "27_C4_NB27 (CGACGGTTAGATTCACCTCTTACA)",
            "28_D4_NB28 (TGAAACCTAAGAAGGCACCGTATC)",
            "29_E4_NB29 (CTAGACACCTTGGGTTGACAGACC)",
            "30_F4_NB30 (TCAGTGAGGATCTACTTCGACCCA)",
            "31_G4_NB31 (TGCGTACAGCAATCAGTTACATTG)",
            "32_H4_NB32 (CCAGTAGAAGTCCGACAACGTCAT)",
            "33_A5_NB33 (CAGACTTGGTACGGTTGGGTAACT)",
            "34_B5_NB34 (GGACGAAGAACTCAAGTCAAAGGC)",
            "35_C5_NB35 (CTACTTACGAAGCTGAGGGACTGC)",
            "36_D5_NB36 (ATGTCCCAGTTAGAGGAGGAAACA)",
            "37_E5_NB37 (GCTTGCGATTGATGCTTAGTATCA)",
            "38_F5_NB38 (ACCACAGGAGGACGATACAGAGAA)",
            "39_G5_NB39 (CCACAGTGTCAACTAGAGCCTCTC)",
            "40_H5_NB40 (TAGTTTGGATGACCAAGGATAGCC)",
            "41_A6_NB41 (GGAGTTCGTCCAGAGAAGTACACG)",
            "42_B6_NB42 (CTACGTGTAAGGCATACCTGCCAG)",
            "43_C6_NB43 (CTTTCGTTGTTGACTCGACGGTAG)",
            "44_D6_NB44 (AGTAGAAAGGGTTCCTTCCCACTC)",
            "45_E6_NB45 (GATCCAACAGAGATGCCTTCAGTG)",
            "46_F6_NB46 (GCTGTGTTCCACTTCATTCTCCTG)",
            "47_G6_NB47 (GTGCAACTTTCCCACAGGTAGTTC)",
            "48_H6_NB48 (CATCTGGAACGTGGTACACCTGTA)",
            "49_A7_NB49 (ACTGGTGCAGCTTTGAACATCTAG)",
            "50_B7_NB50 (ATGGACTTTGGTAACTTCCTGCGT)",
            "51_C7_NB51 (GTTGAATGAGCCTACTGGGTCCTC)",
            "52_D7_NB52 (TGAGAGACAAGATTGTTCGTGGAC)",
            "53_E7_NB53 (AGATTCAGACCGTCTCATGCAAAG)",
            "54_F7_NB54 (CAAGAGCTTTGACTAAGGAGCATG)",
            "55_G7_NB55 (TGGAAGATGAGACCCTGATCTACG)",
            "56_H7_NB56 (TCACTACTCAACAGGTGGCATGAA)",
            "57_A8_NB57 (GCTAGGTCAATCTCCTTCGGAAGT)",
            "58_B8_NB58 (CAGGTTACTCCTCCGTGAGTCTGA)",
            "59_C8_NB59 (TCAATCAAGAAGGGAAAGCAAGGT)",
            "60_D8_NB60 (CATGTTCAACCAAGGCTTCTATGG)",
            "61_E8_NB61 (AGAGGGTACTATGTGCCTCAGCAC)",
            "62_F8_NB62 (CACCCACACTTACTTCAGGACGTA)",
            "63_G8_NB63 (TTCTGAAGTTCCTGGGTCTTGAAC)",
            "64_H8_NB64 (GACAGACACCGTTCATCGACTTTC)",
            "65_A9_NB65 (TTCTCAGTCTTCCTCCAGACAAGG)",
            "66_B9_NB66 (CCGATCCTTGTGGCTTCTAACTTC)",
            "67_C9_NB67 (GTTTGTCATACTCGTGTGCTCACC)",
            "68_D9_NB68 (GAATCTAAGCAAACACGAAGGTGG)",
            "69_E9_NB69 (TACAGTCCGAGCCTCATGTGATCT)",
            "70_F9_NB70 (ACCGAGATCCTACGAATGGAGTGT)",
            "71_G9_NB71 (CCTGGGAGCATCAGGTAGTAACAG)",
            "72_H9_NB72 (TAGCTGACTGTCTTCCATACCGAC)",
            "73_A10_NB73 (AAGAAACAGGATGACAGAACCCTC)",
            "74_B10_NB74 (TACAAGCATCCCAACACTTCCACT)",
            "75_C10_NB75 (GACCATTGTGATGAACCCTGTTGT)",
            "76_D10_NB76 (ATGCTTGTTACATCAACCCTGGAC)",
            "77_E10_NB77 (CGACCTGTTTCTCAGGGATACAAC)",
            "78_F10_NB78 (AACAACCGAACCTTTGAATCAGAA)",
            "79_G10_NB79 (TCTCGGAGATAGTTCTCACTGCTG)",
            "80_H10_NB80 (CGGATGAACATAGGATAGCGATTC)",
            "81_A11_NB81 (CCTCATCTTGTGAAGTTGTTTCGG)",
            "82_B11_NB82 (ACGGTATGTCGAGTTCCAGGACTA)",
            "83_C11_NB83 (TGGCTTGATCTAGGTAAGGTCGAA)",
            "84_D11_NB84 (GTAGTGGACCTAGAACCTGTGCCA)",
            "85_E11_NB85 (AACGGAGGAGTTAGTTGGATGATC)",
            "86_F11_NB86 (AGGTGATCCCAACAAGCGTAAGTA)",
            "87_G11_NB87 (TACATGCTCCTGTTGTTAGGGAGG)",
            "88_H11_NB88 (TCTTCTACTACCGATCCGAAGCAG)",
            "89_A12_NB89 (ACAGCATCAATGTTTGGCTAGTTG)",
            "90_B12_NB90 (GATGTAGAGGGTACGGTTTGAGGC)",
            "91_C12_NB91 (GGCTCCATAGGAACTCACGCTACT)",
            "92_D12_NB92 (TTGTGAGTGGAAAGATACAGGACC)",
            "93_E12_NB93 (AGTTTCCATCACTTCAGACTTGGG)",
            "94_F12_NB94 (GATTGTCCTCAAACTGCCACCTAC)",
            "95_G12_NB95 (CCTGTCTGGAAGAAGAATGGACTT)",
            "96_H12_NB96 (CTGAACGGTCATAGAGTCCACCAT)",
        ],
    ),
    (
        ["EXP-PBC096"],
        [
            "A01_BC01 (AAGAAAGTTGTCGGTGTCTTTGTG)",
            "A02_BC02 (TCGATTCCGTTTGTAGTCGTCTGT)",
            "A03_BC03 (GAGTCTTGTGTCCCAGTTACCAGG)",
            "A04_BC04 (TTCGGATTCTATCGTGTTTCCCTA)",
            "A05_BC05 (CTTGTCCAGGGTTTGTGTAACCTT)",
            "A06_BC06 (TTCTCGCAAAGGCAGAAAGTAGTC)",
            "A07_BC07 (GTGTTACCGTGGGAATGAATCCTT)",
            "A08_BC08 (TTCAGGGAACAAACCAAGTTACGT)",
            "A09_BC09 (AACTAGGCACAGCGAGTCTTGGTT)",
            "A10_BC10 (AAGCGTTGAAACCTTTGTCCTCTC)",
            "A11_BC11 (GTTTCATCTATCGGAGGGAATGGA)",
            "A12_BC12 (CAGGTAGAAAGAAGCAGAATCGGA)",
            "B01_BC13 (AGAACGACTTCCATACTCGTGTGA)",
            "B02_BC14 (AACGAGTCTCTTGGGACCCATAGA)",
            "B03_BC15 (AGGTCTACCTCGCTAACACCACTG)",
            "B04_BC16 (CGTCAACTGACAGTGGTTCGTACT)",
            "B05_BC17 (ACCCTCCAGGAAAGTACCTCTGAT)",
            "B06_BC18 (CCAAACCCAACAACCTAGATAGGC)",
            "B07_BC19 (GTTCCTCGTGCAGTGTCAAGAGAT)",
            "B08_BC20 (TTGCGTCCTGTTACGAGAACTCAT)",
            "B09_BC21 (GAGCCTCTCATTGTCCGTTCTCTA)",
            "B10_BC22 (ACCACTGCCATGTATCAAAGTACG)",
            "B11_BC23 (CTTACTACCCAGTGAACCTCCTCG)",
            "B12_BC24 (GCATAGTTCTGCATGATGGGTTAG)",
            "C01_BC25 (GTAAGTTGGGTATGCAACGCAATG)",
            "C02_BC26 (CATACAGCGACTACGCATTCTCAT)",
            "C03_BC27 (CGACGGTTAGATTCACCTCTTACA)",
            "C04_BC28 (TGAAACCTAAGAAGGCACCGTATC)",
            "C05_BC29 (CTAGACACCTTGGGTTGACAGACC)",
            "C06_BC30 (TCAGTGAGGATCTACTTCGACCCA)",
            "C07_BC31 (TGCGTACAGCAATCAGTTACATTG)",
            "C08_BC32 (CCAGTAGAAGTCCGACAACGTCAT)",
            "C09_BC33 (CAGACTTGGTACGGTTGGGTAACT)",
            "C10_BC34 (GGACGAAGAACTCAAGTCAAAGGC)",
            "C11_BC35 (CTACTTACGAAGCTGAGGGACTGC)",
            "C12_BC36 (ATGTCCCAGTTAGAGGAGGAAACA)",
            "D01_BC37 (GCTTGCGATTGATGCTTAGTATCA)",
            "D02_BC38 (ACCACAGGAGGACGATACAGAGAA)",
            "D03_BC39 (CCACAGTGTCAACTAGAGCCTCTC)",
            "D04_BC40 (TAGTTTGGATGACCAAGGATAGCC)",
            "D05_BC41 (GGAGTTCGTCCAGAGAAGTACACG)",
            "D06_BC42 (CTACGTGTAAGGCATACCTGCCAG)",
            "D07_BC43 (CTTTCGTTGTTGACTCGACGGTAG)",
            "D08_BC44 (AGTAGAAAGGGTTCCTTCCCACTC)",
            "D09_BC45 (GATCCAACAGAGATGCCTTCAGTG)",
            "D10_BC46 (GCTGTGTTCCACTTCATTCTCCTG)",
            "D11_BC47 (GTGCAACTTTCCCACAGGTAGTTC)",
            "D12_BC48 (CATCTGGAACGTGGTACACCTGTA)",
            "E01_BC49 (ACTGGTGCAGCTTTGAACATCTAG)",
            "E02_BC50 (ATGGACTTTGGTAACTTCCTGCGT)",
            "E03_BC51 (GTTGAATGAGCCTACTGGGTCCTC)",
            "E04_BC52 (TGAGAGACAAGATTGTTCGTGGAC)",
            "E05_BC53 (AGATTCAGACCGTCTCATGCAAAG)",
            "E06_BC54 (CAAGAGCTTTGACTAAGGAGCATG)",
            "E07_BC55 (TGGAAGATGAGACCCTGATCTACG)",
            "E08_BC56 (TCACTACTCAACAGGTGGCATGAA)",
            "E09_BC57 (GCTAGGTCAATCTCCTTCGGAAGT)",
            "E10_BC58 (CAGGTTACTCCTCCGTGAGTCTGA)",
            "E11_BC59 (TCAATCAAGAAGGGAAAGCAAGGT)",
            "E12_BC60 (CATGTTCAACCAAGGCTTCTATGG)",
            "F01_BC61 (AGAGGGTACTATGTGCCTCAGCAC)",
            "F02_BC62 (CACCCACACTTACTTCAGGACGTA)",
            "F03_BC63 (TTCTGAAGTTCCTGGGTCTTGAAC)",
            "F04_BC64 (GACAGACACCGTTCATCGACTTTC)",
            "F05_BC65 (TTCTCAGTCTTCCTCCAGACAAGG)",
            "F06_BC66 (CCGATCCTTGTGGCTTCTAACTTC)",
            "F07_BC67 (GTTTGTCATACTCGTGTGCTCACC)",
            "F08_BC68 (GAATCTAAGCAAACACGAAGGTGG)",
            "F09_BC69 (TACAGTCCGAGCCTCATGTGATCT)",
            "F10_BC70 (ACCGAGATCCTACGAATGGAGTGT)",
            "F11_BC71 (CCTGGGAGCATCAGGTAGTAACAG)",
            "F12_BC72 (TAGCTGACTGTCTTCCATACCGAC)",
            "G01_BC73 (AAGAAACAGGATGACAGAACCCTC)",
            "G02_BC74 (TACAAGCATCCCAACACTTCCACT)",
            "G03_BC75 (GACCATTGTGATGAACCCTGTTGT)",
            "G04_BC76 (ATGCTTGTTACATCAACCCTGGAC)",
            "G05_BC77 (CGACCTGTTTCTCAGGGATACAAC)",
            "G06_BC78 (AACAACCGAACCTTTGAATCAGAA)",
            "G07_BC79 (TCTCGGAGATAGTTCTCACTGCTG)",
            "G08_BC80 (CGGATGAACATAGGATAGCGATTC)",
            "G09_BC81 (CCTCATCTTGTGAAGTTGTTTCGG)",
            "G10_BC82 (ACGGTATGTCGAGTTCCAGGACTA)",
            "G11_BC83 (TGGCTTGATCTAGGTAAGGTCGAA)",
            "G12_BC84 (GTAGTGGACCTAGAACCTGTGCCA)",
            "H01_BC85 (AACGGAGGAGTTAGTTGGATGATC)",
            "H02_BC86 (AGGTGATCCCAACAAGCGTAAGTA)",
            "H03_BC87 (TACATGCTCCTGTTGTTAGGGAGG)",
            "H04_BC88 (TCTTCTACTACCGATCCGAAGCAG)",
            "H05_BC89 (ACAGCATCAATGTTTGGCTAGTTG)",
            "H06_BC90 (GATGTAGAGGGTACGGTTTGAGGC)",
            "H07_BC91 (GGCTCCATAGGAACTCACGCTACT)",
            "H08_BC92 (TTGTGAGTGGAAAGATACAGGACC)",
            "H09_BC93 (AGTTTCCATCACTTCAGACTTGGG)",
            "H10_BC94 (GATTGTCCTCAAACTGCCACCTAC)",
            "H11_BC95 (CCTGTCTGGAAGAAGAATGGACTT)",
            "H12_BC96 (CTGAACGGTCATAGAGTCCACCAT)",
        ],
    ),
]


def format_well(well: str) -> str:
    """Clean up a string specifying a plate well to fit standardized format.

    E.g.
    A:01 -> A:1
    G12 -> G:12
    b4 -> B:4

    """
    letter = well[0].upper()
    assert letter in "ABCDEFGH", f"Invalid row letter: {letter}"
    num = well[1:].lstrip("0").replace(":", "")
    assert num in [str(i) for i in range(1, 13)], f"Invalid column number: {num}"

    return f"{letter}:{num}"


# Build dict to map LIMS label to it's properties
ont_label2dict = {}
for kits, labels in kits_and_labels:
    for label in labels:
        # Instantiate dict to store barcode properties
        label_dict = {}
        label_dict["kits"] = kits
        label_dict["label"] = label
        label_dict["seq"] = label.split(" ")[-1][1:-1]

        # Accommodate different format labels
        if kits == ["SQK-NBD114.24", "SQK-NBD114.96"]:
            # E.g. 01_A1_NB01 (CACAAAGACACCGACAACTTTCTT)
            label_dict["num"] = int(label[0:2].lstrip("0"))
            label_dict["well"] = format_well(label.split("_")[1])
        elif kits == ["EXP-PBC096"]:
            # E.g. A01_BC01 (AAGAAAGTTGTCGGTGTCTTTGTG)
            label_dict["num"] = int(label.split("_")[1].split(" ")[0][2:].lstrip("0"))
            label_dict["well"] = format_well(label.split("_")[0])
        else:
            raise NotImplementedError(f"Unknown kit(s): {kits}")

        ont_label2dict[label] = label_dict
